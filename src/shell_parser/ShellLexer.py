# Generated from src/parser/Shell.g4 by ANTLR 4.13.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,13,99,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,1,0,1,0,1,1,1,1,5,1,34,8,1,10,1,12,1,37,9,1,1,2,1,2,1,3,1,3,
        1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,4,7,51,8,7,11,7,12,7,52,1,8,1,8,
        5,8,57,8,8,10,8,12,8,60,9,8,1,8,1,8,1,9,1,9,5,9,66,8,9,10,9,12,9,
        69,9,9,1,9,1,9,1,10,1,10,1,10,3,10,76,8,10,5,10,78,8,10,10,10,12,
        10,81,9,10,1,10,1,10,1,11,1,11,1,11,1,12,4,12,89,8,12,11,12,12,12,
        90,1,13,4,13,94,8,13,11,13,12,13,95,1,13,1,13,0,0,14,1,1,3,2,5,3,
        7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,0,25,12,27,13,1,0,8,3,
        0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,8,0,9,10,32,32,
        34,34,39,39,59,60,62,62,96,96,124,124,2,0,10,10,39,39,2,0,10,10,
        96,96,3,0,10,10,34,34,92,92,5,0,32,32,59,60,62,62,96,96,124,124,
        3,0,9,10,13,13,32,32,105,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,
        1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,
        1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,1,29,
        1,0,0,0,3,31,1,0,0,0,5,38,1,0,0,0,7,40,1,0,0,0,9,42,1,0,0,0,11,44,
        1,0,0,0,13,47,1,0,0,0,15,50,1,0,0,0,17,54,1,0,0,0,19,63,1,0,0,0,
        21,72,1,0,0,0,23,84,1,0,0,0,25,88,1,0,0,0,27,93,1,0,0,0,29,30,5,
        124,0,0,30,2,1,0,0,0,31,35,7,0,0,0,32,34,7,1,0,0,33,32,1,0,0,0,34,
        37,1,0,0,0,35,33,1,0,0,0,35,36,1,0,0,0,36,4,1,0,0,0,37,35,1,0,0,
        0,38,39,5,59,0,0,39,6,1,0,0,0,40,41,5,96,0,0,41,8,1,0,0,0,42,43,
        5,62,0,0,43,10,1,0,0,0,44,45,5,62,0,0,45,46,5,62,0,0,46,12,1,0,0,
        0,47,48,5,60,0,0,48,14,1,0,0,0,49,51,8,2,0,0,50,49,1,0,0,0,51,52,
        1,0,0,0,52,50,1,0,0,0,52,53,1,0,0,0,53,16,1,0,0,0,54,58,5,39,0,0,
        55,57,8,3,0,0,56,55,1,0,0,0,57,60,1,0,0,0,58,56,1,0,0,0,58,59,1,
        0,0,0,59,61,1,0,0,0,60,58,1,0,0,0,61,62,5,39,0,0,62,18,1,0,0,0,63,
        67,5,96,0,0,64,66,8,4,0,0,65,64,1,0,0,0,66,69,1,0,0,0,67,65,1,0,
        0,0,67,68,1,0,0,0,68,70,1,0,0,0,69,67,1,0,0,0,70,71,5,96,0,0,71,
        20,1,0,0,0,72,79,5,34,0,0,73,76,8,5,0,0,74,76,3,23,11,0,75,73,1,
        0,0,0,75,74,1,0,0,0,76,78,1,0,0,0,77,75,1,0,0,0,78,81,1,0,0,0,79,
        77,1,0,0,0,79,80,1,0,0,0,80,82,1,0,0,0,81,79,1,0,0,0,82,83,5,34,
        0,0,83,22,1,0,0,0,84,85,5,92,0,0,85,86,9,0,0,0,86,24,1,0,0,0,87,
        89,8,6,0,0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,
        0,91,26,1,0,0,0,92,94,7,7,0,0,93,92,1,0,0,0,94,95,1,0,0,0,95,93,
        1,0,0,0,95,96,1,0,0,0,96,97,1,0,0,0,97,98,6,13,0,0,98,28,1,0,0,0,
        9,0,35,52,58,67,75,79,90,95,1,6,0,0
    ]

class ShellLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    COMMAND = 2
    SEQUENCE_OP = 3
    BACKTICK = 4
    REDIRECTION_OVERWRITE = 5
    REDIRECTION_APPEND = 6
    REDIRECTION_READ = 7
    UNQUOTED_ARG = 8
    SINGLE_QUOTED_ARG = 9
    BACKQUOTED_ARG = 10
    DOUBLE_QUOTED_ARG = 11
    FILE = 12
    WS = 13

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'|'", "';'", "'`'", "'>'", "'>>'", "'<'" ]

    symbolicNames = [ "<INVALID>",
            "COMMAND", "SEQUENCE_OP", "BACKTICK", "REDIRECTION_OVERWRITE", 
            "REDIRECTION_APPEND", "REDIRECTION_READ", "UNQUOTED_ARG", "SINGLE_QUOTED_ARG", 
            "BACKQUOTED_ARG", "DOUBLE_QUOTED_ARG", "FILE", "WS" ]

    ruleNames = [ "T__0", "COMMAND", "SEQUENCE_OP", "BACKTICK", "REDIRECTION_OVERWRITE", 
                  "REDIRECTION_APPEND", "REDIRECTION_READ", "UNQUOTED_ARG", 
                  "SINGLE_QUOTED_ARG", "BACKQUOTED_ARG", "DOUBLE_QUOTED_ARG", 
                  "ESCAPE_SEQUENCE", "FILE", "WS" ]

    grammarFileName = "Shell.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


